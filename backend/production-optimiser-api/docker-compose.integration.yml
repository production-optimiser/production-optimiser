version: '3.9'

# docker-compose -f docker-compose.service-tool.yml up -d

services:
  postgres:
    image: postgres:16-alpine
    ports:
      - "5431:5432"
    environment:
      POSTGRES_USER: production_optimiser
      POSTGRES_PASSWORD: production_optimiser
      POSTGRES_DB: production_optimiser
#    uncomment the following lines to persist the data with jpa=update
#    volumes:
#      - ./postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U production_optimiser -d production_optimiser && psql -U production_optimiser -d production_optimiser -c 'SELECT 1' || grep -q 'database system is ready to accept connections'"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: on-failure

  production-optimiser:
    container_name: production-optimiser-api
    image: production-optimiser-api:latest
    pull_policy: build
    build:
      context: .
      dockerfile: ./Dockerfile.local
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/production_optimiser
      - SPRING_DATASOURCE_USERNAME=production_optimiser
      - SPRING_DATASOURCE_PASSWORD=production_optimiser
    ports:
      - "8080:8080"
    restart: on-failure

  production-optimiser-service-tool:
    container_name: production-optimiser-service-tool
    image: production-optimiser-service-tool:latest
    pull_policy: build
    build:
      context: ../../model-services
      dockerfile: Dockerfile
    ports:
      - "9080:9080"
    restart: on-failure